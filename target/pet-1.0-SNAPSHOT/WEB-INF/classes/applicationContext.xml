<?xml version="1.0" encoding="UTF-8"?>
<!-- @version $Id: applicationContext.xml 561608 2007-08-01 00:33:12Z vgritsenko $ -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

  <!-- Spring的配置文件，这里主要配置和业务逻辑有关的-->
  <!-- 数据源,mybatis,事务控制 -->

  <!-- 除了控制器都扫描，和SpringMVC相反 -->
  <!-- no such bean found的错误在于此 一开始写的是java 但是java不是一个package -->
  <!-- po和mapper的包也找不到 -->
  <context:component-scan base-package="com.petstore"/>

  <!-- 加载数据源文件 -->
  <context:property-placeholder location="classpath:db.properties"/>
  <!-- 配置数据源 -->
  <bean id="dataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="url" value="${jdbc.jdbcUrl}"></property>
    <property name="driverClassName" value="${jdbc.driverClass}"></property>
    <property name="username" value="${jdbc.user}"></property>
    <property name="password" value="${jdbc.password}"></property>
  </bean>

  <!-- 配置session工厂 和MyBatis的整合 -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="configLocation" value="classpath:mybatis-config.xml"></property>
    <property name="dataSource" ref="dataSource"></property>
    <property name="mapperLocations">
      <array>
        <value>classpath:mapper/*.xml</value>
      </array>
    </property>
    <property name="plugins">
      <array>
        <bean class="com.github.pagehelper.PageInterceptor">
          <!-- 这里的几个配置主要演示如何使用，如果不理解，一定要去掉下面的配置 -->
          <!--
               helperDialect：分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。
               reasonable：分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0
                时会查询第一页， pageNum>pages（超过总数时），会查询最后一页。默认false 时，直接根
                据参数进行查询。
               supportMethodsArguments：支持通过 Mapper 接口参数来传递分页参数，默认值false
               utoRuntimeDialect：默认值为 false。设置为 true 时，允许在运行时根据多数据源自动
               识别对应方言的分页
               params：为了支持startPage(Object params)方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值，
                可以配置 pageNum,pageSize,count,pageSizeZero,reasonable，不配置映射的用默认值， 默认值为
                pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;
                pageSizeZero=pageSizeZero
            -->

          <property name="properties">
            <value>
              helperDialect=mysql
              reasonable=true
            </value>
          </property>
        </bean>
      </array>
    </property>
  </bean>

  <!--<aop:aspectj-autoproxy />-->
  <!--<aop:config proxy-target-class="true">-->
    <!--<aop:advisor pointcut="execution(public * com.petstore.service.*Service.*(..))" advice-ref="txAdvice"/>-->
  <!--</aop:config>-->

  <!-- com.petstore.mapper scanner,将MyBatis接口的实现加入到ioc容器中 -->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.petstore.mapper"></property>
  </bean>

  <!-- 事务管理器 -->
  <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" />
  </bean>

  <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
    <!--<tx:attributes>-->
      <!--<tx:method name="get*" read-only="true" propagation="REQUIRED"/>-->
      <!--<tx:method name="list*" read-only="true" propagation="REQUIRED"/>-->
      <!--<tx:method name="find*" read-only="true" propagation="REQUIRED"/>-->
      <!--<tx:method name="save*" propagation="REQUIRED" />-->
      <!--<tx:method name="delete*" propagation="REQUIRED" />-->
      <!--<tx:method name="update*" propagation="REQUIRED" />-->
      <!--<tx:method name="add*" propagation="REQUIRED" />-->
      <!--<tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/>-->
    <!--</tx:attributes>-->
  <!--</tx:advice>-->


</beans>
